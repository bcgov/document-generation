---
apiVersion: v1
kind: Template
labels:
  template: "${APP_NAME}-${JOB_NAME}-app-bc-template"
metadata:
  name: "${APP_NAME}-${JOB_NAME}-app-bc"
objects:

  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: "${APP_NAME}-${JOB_NAME}"
      name: "${APP_NAME}-${JOB_NAME}-app"
    spec:
      lookupPolicy:
        local: false

  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: "${APP_NAME}-${JOB_NAME}"
      name: "${APP_NAME}-${JOB_NAME}-app"
    spec:
      completionDeadlineSeconds: 600
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: "${APP_NAME}-${JOB_NAME}-app:${VERSION}"
      postCommit: {}
      resources:
        requests:
          cpu: 2000m
          memory: 4Gi
        limits:
          cpu: 4000m
          memory: 8Gi
      runPolicy: Serial
      source:
        contextDir: app
        git:
          ref: "${SOURCE_REPO_REF}"
          uri: "${SOURCE_REPO_URL}"
        type: Git
        dockerfile: |-
          FROM mhart/alpine-node:12
          WORKDIR /opt/app-root/src
          COPY . .
          RUN npm run all:ci \
           && npm run all:build \
           && npm run frontend:purge
          EXPOSE 8888
          CMD ["npm", "run", "start"]
      strategy:
        dockerStrategy: {}
        type: Docker
      successfulBuildsHistoryLimit: 5
parameters:
  - name: APP_NAME
    description: Application name
    required: true
  - name: JOB_NAME
    description: Job identifier (i.e. 'pr-5' OR 'master')
    required: true
  - name: VERSION
    description: Build number or tag for images (ImageStreamTag)
    required: true
  - name: SOURCE_REPO_REF
    description: Git Pull Request Reference (i.e. 'pull/CHANGE_ID/head')
    required: true
  - name: SOURCE_REPO_URL
    description: Git Repository URL
    required: true
